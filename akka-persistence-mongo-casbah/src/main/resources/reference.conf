#################################################
# Akka Persistence Casbah Reference Config File #
#################################################

# casbah journal plugin
casbah-journal {

  # Class name of the plugin
  class = "akka.persistence.mongo.journal.CasbahJournal"

  # Dispatcher for fetching and replaying messages
  replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"

  # Mongo URL including database and collection
  mongo-journal-url = "mongodb://localhost:27017/store.messages"

  # Mongo journal write concern
  # A journal must support the following akka-persistence property:
  #
  # When a processor's receive method is called with a Persistent message it can safely assume that this message has
  #     been successfully written to the journal.
  #
  # As a result only the following write concerns are supported:
  #
  # acknowledged [Safe] - Exceptions are raised for network issues and server errors; waits on a server for the write
  #     operation.
  #
  # journaled [JournalSafe] - Exceptions are raised for network issues, and server errors; the write operation waits
  #     for the server to group commit to the journal file on disk.
  #
  # replicas-acknowledged [ReplicasSafe] - Exceptions are raised for network issues and server errors; waits for at
  #     least 2 servers for the write operation.
  mongo-journal-write-concern = "journaled"

  # Mongo Journal write concern timeout.
  # Timeout for write operation as Int.
  # Default is 10000 (10 Seconds). 0 = infinite (not recommended).
  mongo-journal-write-concern-timeout = 10000
}

# casbah snapshot plugin
casbah-snapshot-store {

  # Class name of the plugin
  class = "akka.persistence.mongo.snapshot.CasbahSnapshotStore"

  # Mongo URL including database and collection
  mongo-snapshot-url = "mongodb://localhost:27017/store.snapshots"

  # Mongo snapshot write concern
  # A snapshot-store must support the following akka-persistence property:
  #
  # When a processor's receive method is called to persist a snapshot it can safely assume that snapshot has been
  #     successfully written..
  #
  # As a result only the following write concerns are supported:
  #
  # When a processor's receive method is called with a Persistent message it can safely assume that this message has
  #     been successfully written to the journal.
  #
  # As a result only the following write concerns are supported:
  #
  # acknowledged [Safe] - Exceptions are raised for network issues and server errors; waits on a server for the write
  #     operation.
  #
  # journaled [JournalSafe] - Exceptions are raised for network issues, and server errors; the write operation waits
  #     for the server to group commit to the journal file on disk.
  #
  # replicas-acknowledged [ReplicasSafe] - Exceptions are raised for network issues and server errors; waits for at
  #     least 2 servers for the write operation.
  mongo-snapshot-write-concern = "journaled"

  # Mongo snapshot write concern timeout.
  # Timeout for write operation as Int.
  # Default is 10000 (10 Seconds). 0 = infinite (not recommended).
  mongo-snapshot-write-concern-timeout = 10000

  # Snapshot load attempts
  # Select the youngest of {n} snapshots that match the upper bound. This helps where a snapshot may not have persisted
  #     correctly because of a JVM crash. As a result an attempt to load the snapshot may fail but an older may succeed.
  mongo-snapshot-load-attempts = 3
}
